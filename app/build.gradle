/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */


plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
}

// from https://stackoverflow.com/questions/43937169/gradle-application-plugin-with-multiple-main-classes/46938169
 apply plugin: 'java'
 task(buildast, dependsOn: 'classes', type: JavaExec) {
     mainClass = 'com.craftinginterpreters.tool.GenerateAst'
     classpath = sourceSets.main.runtimeClasspath
     args './src/main/java/com/craftinginterpreters/lox'
 }

application {
    // Define the main class for the application.
    mainClass = 'com.craftinginterpreters.lox.Lox'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

run {
  standardInput = System.in;
}